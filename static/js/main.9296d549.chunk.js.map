{"version":3,"sources":["components/DateDisplay.js","components/DateController.js","App.js","reportWebVitals.js","index.js"],"names":["props","hoursLeft","Math","floor","max","current","minutesLeft","secondsLeft","className","style","width","barWidth","round","DateController","initState","dateTimeStart","Date","now","dateTimeEnd","working","state","_increasement","setState","setTimeout","startIncreasement","a","console","log","data-enable-time","value","this","options","minuteIncrement","onChange","date","getTime","onClick","DateDisplay","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAIe,G,MAAA,SAACA,GAKZ,IAAIC,EAAYC,KAAKC,OAAOH,EAAMI,IAAMJ,EAAMK,SAAW,MACrDC,EAAcJ,KAAKC,OAAOH,EAAMI,IAAMJ,EAAMK,SAAW,IAAkB,GAAZJ,EAC7DM,EAAcP,EAAMI,IAAMJ,EAAMK,QAAsB,KAAZJ,EAAiC,GAAdK,EAEjE,OACI,sBAAKE,UAAU,cAAf,UACI,8BACKP,EAAY,GAAK,IAAMA,EAAYA,EADxC,IAEKK,EAAc,GAAK,IAAMA,EAAcA,EAF5C,IAGKC,EAAc,GAAK,IAAMA,EAAcA,KAE5C,uBAAMC,UAAU,MAAhB,UACI,mBACIA,UAAU,YACVC,MAAO,CACHC,MAAOC,YAGf,mBACIH,UAAU,YACVC,MAAO,CACHC,OAxBK,IAAdV,EAAMI,IAAYF,KAAKU,MAAMD,GAAiBT,KAAKU,MAAOZ,EAAMK,QAAUL,EAAMI,IAAO,MAAQ,GAwBzD,gBCvBxCS,G,YAAb,4MACIC,UAAY,CACRC,cAAeC,KAAKC,MACpBC,YAAaF,KAAKC,MAClBZ,QAAS,EACTD,IAAK,EACLe,SAAS,GANjB,EASIC,MAAQ,EAAKN,UATjB,EAWIO,cAAgB,WACR,EAAKD,MAAMf,QAAU,EAAKe,MAAMhB,KAChC,EAAKkB,SAAS,CACVjB,QAAS,EAAKe,MAAMf,QAAU,EAC9Bc,SAAS,IAEbI,WAAW,EAAKF,cAAe,MAG/B,EAAKC,SAAS,CACVH,SAAS,KArBzB,EA0BIK,kBA1BJ,sBA0BwB,sBAAAC,EAAA,yDACX,EAAKL,MAAMD,WAAW,EAAKC,MAAML,cAAgB,EAAKK,MAAMF,aADjD,gCAEN,EAAKI,SAAS,CAChBjB,QAAS,EACTD,IAAKF,KAAKU,OAAO,EAAKQ,MAAMF,YAAc,EAAKE,MAAML,eAAiB,OAJ9D,OAOZW,QAAQC,IAAI,EAAKP,OACjB,EAAKC,gBARO,2CA1BxB,uDAsCc,IAAD,OACL,OACI,sBAAKb,UAAU,iBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qCACA,cAAC,IAAD,CACIoB,oBAAA,EACAC,MAAOC,KAAKV,MAAML,cAClBgB,QAAS,CACLC,gBAAiB,GAErBC,SAAU,SAAAC,GACN,EAAKZ,SAAS,CAAEP,cAAgB,IAAIC,KAAKkB,GAAOC,eAGxD,wBAAQC,QAAS,kBAAM,EAAKd,SAAS,CAAEP,cAAeC,KAAKC,SAA3D,6BAEJ,sBAAKT,UAAU,cAAf,UACI,mCACA,cAAC,IAAD,CACIoB,oBAAA,EACAC,MAAOC,KAAKV,MAAMF,YAClBa,QAAS,CACLC,gBAAiB,GAErBC,SAAU,SAAAC,GACN,EAAKZ,SAAS,CAAEJ,YAAc,IAAIF,KAAKkB,GAAOC,eAGtD,wBAAQC,QAAS,kBAAM,EAAKd,SAAS,CAAEJ,YAAaF,KAAKC,SAAzD,6BAGJ,cAACoB,EAAD,CACIhC,QAASyB,KAAKV,MAAMf,QACpBD,IAAK0B,KAAKV,MAAMhB,MAEpB,uBAAMI,UAAU,cAAhB,UACI,wBAAQ4B,QAASN,KAAKN,kBAAtB,iBACA,wBAAQY,QAAS,kBAAM,EAAKd,SAAS,EAAKR,YAA1C,6BA5EpB,GAAoCwB,IAAMC,YCK3BC,MATf,WACE,OACE,sBAAKhC,UAAU,MAAf,UACE,uCACA,cAAC,EAAD,QCKSiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9296d549.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst barWidth = 1200;\r\n\r\nexport default (props) => {\r\n    function calculatePosition() {\r\n        return props.max !== 0 ? Math.round(barWidth / 100 * Math.round((props.current / props.max) * 100)) : 0;\r\n    }\r\n\r\n    let hoursLeft = Math.floor((props.max - props.current) / 3600);\r\n    let minutesLeft = Math.floor((props.max - props.current) / 60) - hoursLeft * 60;\r\n    let secondsLeft = props.max - props.current - hoursLeft * 3600 - minutesLeft * 60;\r\n\r\n    return (\r\n        <div className=\"dateDisplay\">\r\n            <p>\r\n                {hoursLeft < 10 ? '0' + hoursLeft : hoursLeft}:\r\n                {minutesLeft < 10 ? '0' + minutesLeft : minutesLeft}:\r\n                {secondsLeft < 10 ? '0' + secondsLeft : secondsLeft}\r\n            </p>\r\n            <span className=\"bar\">\r\n                <p\r\n                    className=\"bar-outer\"\r\n                    style={{\r\n                        width: barWidth + 'px'\r\n                    }}>\r\n                </p>\r\n                <p\r\n                    className=\"bar-inner\"\r\n                    style={{\r\n                        width: calculatePosition() + 'px',\r\n                    }}>\r\n                </p>\r\n            </span>\r\n            {/* <progress value={calculatePosition()} max={props.max}></progress> */}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport \"flatpickr/dist/themes/dark.css\";\r\nimport DateDisplay from './DateDisplay'\r\nimport './DateController.css';\r\nimport './DateDisplay.css';\r\n\r\nexport class DateController extends React.Component {\r\n    initState = {\r\n        dateTimeStart: Date.now(),\r\n        dateTimeEnd: Date.now(),\r\n        current: 0,\r\n        max: 0,\r\n        working: false\r\n    };\r\n\r\n    state = this.initState;\r\n\r\n    _increasement = () => {\r\n        if (this.state.current < this.state.max) {\r\n            this.setState({\r\n                current: this.state.current + 1,\r\n                working: true\r\n            });\r\n            setTimeout(this._increasement, 1000);\r\n        }\r\n        else {\r\n            this.setState({\r\n                working: false\r\n            });\r\n        }\r\n    }\r\n\r\n    startIncreasement = async () => {\r\n        if (!this.state.working && this.state.dateTimeStart < this.state.dateTimeEnd) {\r\n            await this.setState({\r\n                current: 0,\r\n                max: Math.round((this.state.dateTimeEnd - this.state.dateTimeStart) / 1000)\r\n            })\r\n\r\n            console.log(this.state);\r\n            this._increasement();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dateController\">\r\n                <div className=\"pickerBlock\">\r\n                    <p>From</p>\r\n                    <Flatpickr\r\n                        data-enable-time\r\n                        value={this.state.dateTimeStart}\r\n                        options={{\r\n                            minuteIncrement: 1\r\n                        }}\r\n                        onChange={date => {\r\n                            this.setState({ dateTimeStart: (new Date(date)).getTime() });\r\n                        }}\r\n                    />\r\n                    <button onClick={() => this.setState({ dateTimeStart: Date.now() })}>Current time</button>\r\n                </div>\r\n                <div className=\"pickerBlock\">\r\n                    <p>To</p>\r\n                    <Flatpickr\r\n                        data-enable-time\r\n                        value={this.state.dateTimeEnd}\r\n                        options={{\r\n                            minuteIncrement: 1\r\n                        }}\r\n                        onChange={date => {\r\n                            this.setState({ dateTimeEnd: (new Date(date)).getTime() });\r\n                        }}\r\n                    />\r\n                    <button onClick={() => this.setState({ dateTimeEnd: Date.now() })}>Current time</button>\r\n                </div>\r\n\r\n                <DateDisplay\r\n                    current={this.state.current}\r\n                    max={this.state.max}\r\n                />\r\n                <span className=\"buttonsWrap\">\r\n                    <button onClick={this.startIncreasement}>Run</button>\r\n                    <button onClick={() => this.setState(this.initState)}>Reset</button>\r\n                </span>\r\n            </div >\r\n        )\r\n    }\r\n}","import './App.css';\r\nimport { DateController } from './components/DateController';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Timer</h1>\r\n      <DateController />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}